SELECT 
t1.inserted_at,
t1.hash::text,
t1.from_address_hash::text AS active_user,
t1.to_address_hash::text AS contract_interacted,

t2.from_address_hash::text AS NFT_sender,
t2.to_address_hash::text AS NFT_recipient,
t2.token_id AS NFT_token_id,

t1.value/1e18 AS cro_sent,
t3.amount/1e18 AS cro_amount,

(t1.gas_used/1e18*t1.gas_price) AS transaction_fee


FROM transactions t1

JOIN token_transfers t2 -- nft only
ON t1.hash = t2.transaction_hash


JOIN token_transfers t3 -- currency only
ON t1.hash = t3.transaction_hash


WHERE 

t1.to_address_hash = '\x40cbf9c75a46b147e0fd9ab47df5e064ae015f92' -- contract interacted with
AND t1.status = 1 -- catch successful transactions only

AND t2.token_id IS NOT NULL -- record with NFT transfer inside
AND t2.token_contract_address_hash = '\x06596eD89aC4609DE47A21aF7E36b38b2dF57C26' -- vvs miner mole contract

-- AND t3.to_address_hash = '\x24800215a713695e19d7a75bb4921f884bcd9809' -- platform fee collector address
-- AND t3.to_address_hash = '\xE09f3B486c6d45CF7017d5D45DFB3ab35f8a51b8' -- royalty fee
AND t3.to_address_hash = t2.from_address_hash -- revenue for seller after platform fee and royalty fees

AND t1.hash = '\x31b726d70f99a1966870f1be0763c85894156b535fbe7ec242fcb4920da9b435'
